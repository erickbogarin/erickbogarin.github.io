html{height:100%}body{background-color:#f4f7f6;color:#555;font-family:'Open Sans',sans-serif;font-weight:300;min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow-x:hidden}main{-ms-flex:1;-webkit-box-flex:1;flex:1;margin-top:70px}body,ul{margin:0;padding:0}a{text-decoration:none;color:inherit;}a:visited{color:inherit}blockquote{padding:1px 22px;margin:0 0 22px;font-size:1.25rem;border-left:5px solid #16a085}h1,h2,h3,h4,h5,h6{font-family:'Montserrat',sans-serif;font-weight:300}h3{font-size:1.75rem}h5{font-size:1rem}hr{border-width:0;border-top:1px solid #e1e1e1}html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,
[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}.btn{position:relative;display:inline-block;padding:6px 12px;font-size:$body-font-size;font-weight:bold;line-height:20px;white-space:nowrap;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-repeat:repeat-x;background-position:-1px -1px;background-size:110% 110%;border:1px solid transparentize(#000,.8);border-radius:.25em;-webkit-appearance:none;-moz-appearance:none;appearance:none;}.btn:focus,.btn:active{border-color:transparent}.btn-success,.btn-success:visited{color:#fff;background-color:#58d68d;border-color:#58d68d;}.btn-success:hover,.btn-success:visited:hover,.btn-success:focus,.btn-success:visited:focus{background-color:#32cd73}.btn-lg{padding:10px 16px;font-size:20px;line-height:1.33;border-radius:6px}.container{box-sizing:border-box;margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px;}@media only screen and (min-width:400px){.container{width:400px}}@media only screen and (min-width:600px){.container{width:600px}}@media only screen and (min-width:800px){.container{width:800px}}@media only screen and (min-width:1050px){.container{width:1170px}}@media only screen and (min-width:1800px){.container{width:1800px}}.container-fluid{box-sizing:border-box;margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}pre{background:#f7f7f7;width:100%;padding:1.25rem 0;}pre color #white,pre margin rem(30px) 0,pre font-size rem(14px),pre +above('m'){font-size:1rem;padding:2.5rem 0;margin:3.125rem 0}pre code{width:auto;max-width:50rem;float:none;display:block;margin-right:auto;margin-left:auto;padding-left:0;padding-right:0;padding:0 1.25rem;}pre code::after{content:'';display:table;clear:both}@media only screen and (max-width:800px){pre code{overflow-x:scroll}}pre span{line-height:1.5rem;font-family:'Monaco','Consolas','Menlo',monospace}@media only screen and (min-width:600px){.highlight{word-wrap:break-word}}.highlight .hll{background-color:#ffc}.highlight .c{color:#998;font-style:italic}.highlight .err{color:#a61717;background-color:#e3d2d2}.highlight .k{color:#000;font-weight:bold}.highlight .o{color:#000;font-weight:bold}.highlight .cm{color:#998;font-style:italic}.highlight .cp{color:#999;font-weight:bold;font-style:italic}.highlight .c1{color:#998;font-style:italic}.highlight .cs{color:#999;font-weight:bold;font-style:italic}.highlight .gd{color:#000;background-color:#fdd}.highlight .ge{color:#000;font-style:italic}.highlight .gr{color:#a00}.highlight .gh{color:#999}.highlight .gi{color:#000;background-color:#dfd}.highlight .go{color:#888}.highlight .gp{color:#555}.highlight .gs{font-weight:bold}.highlight .gu{color:#aaa}.highlight .gt{color:#a00}.highlight .kc{color:#000;font-weight:bold}.highlight .kd{color:#000;font-weight:bold}.highlight .kn{color:#000;font-weight:bold}.highlight .kp{color:#000;font-weight:bold}.highlight .kr{color:#000;font-weight:bold}.highlight .kt{color:#458;font-weight:bold}.highlight .m{color:#099}.highlight .s{color:#d01040}.highlight .na{color:#008080}.highlight .nb{color:#0086b3}.highlight .nc{color:#458;font-weight:bold}.highlight .no{color:#008080}.highlight .nd{color:#3c5d5d;font-weight:bold}.highlight .ni{color:#800080}.highlight .ne{color:#900;font-weight:bold}.highlight .nf{color:#900;font-weight:bold}.highlight .nl{color:#900;font-weight:bold}.highlight .nn{color:#555}.highlight .nt{color:#000080}.highlight .nv{color:#008080}.highlight .ow{color:#000;font-weight:bold}.highlight .w{color:#bbb}.highlight .mf{color:#099}.highlight .mh{color:#099}.highlight .mi{color:#099}.highlight .mo{color:#099}.highlight .sb{color:#d01040}.highlight .sc{color:#d01040}.highlight .sd{color:#d01040}.highlight .s2{color:#d01040}.highlight .se{color:#d01040}.highlight .sh{color:#d01040}.highlight .si{color:#d01040}.highlight .sx{color:#d01040}.highlight .sr{color:#009926}.highlight .s1{color:#d01040}.highlight .ss{color:#990073}.highlight .bp{color:#999}.highlight .vc{color:#008080}.highlight .vg{color:#008080}.highlight .vi{color:#008080}.highlight .il{color:#099}.icon{fill:#4b5658;width:45px;height:45px;}.icon.close{fill:#eceeef;-webkit-transition:.2s fill;transition:.2s fill;}.icon.close:hover{fill:#fff}.icon-menu,.icon-search{cursor:pointer}.fa-icon{fill:#4b5658;width:50px;height:30px}.fa-2x{width:80px;height:65px}.input-lg{width:100%;font-size:1.625rem}.list-group{padding:0;}.list-group > .item{list-style:none;border-top:1px solid #fff;}.list-group > .item:last-child{border-bottom:1px solid #fff}.nav-item > .link{display:block;font-weight:800;letter-spacing:.125rem;padding:.625rem 0;}@media only screen and (min-width:800px){.nav-item > .link{padding:.938rem 0}}.nav-horizontal{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-align-items:center;-ms-flex-align:center;align-items:center;-ms-justify-content:space-between;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;}.nav-horizontal > li{list-style:none;padding-left:.625rem}.overlay{display:block;position:fixed;z-index:3;top:0;left:0;height:100%;width:100%;background:rgba(0,0,0,0.5);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0;visibility:hidden}.site-panel{background-color:#fff;box-shadow:0 2px 0 rgba(0,0,0,0.1);border-radius:4px;padding:1.875rem 1.875rem .313rem 1.875rem;margin-top:2.5rem;}.site-panel:last-child{margin-bottom:2.5rem}.tag-list{color:#7b8b8e;font-size:.875rem;font-weight:bold;}.tag-list >.tag{display:inline-block;border-radius:100px;background:transparent;border:2px solid rgba(48,73,97,0.1);margin-left:5px;padding:0 12px;line-height:32px;white-space:nowrap;position:relative;text-align:center}.card-item{background-color:#fff;border-radius:5px;box-sizing:border-box;box-shadow:0 1px 0 0 rgba(0,0,0,0.1);font-size:1.313rem;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-justify-content:space-between;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:1.875rem;-webkit-animation:scaleCard .5s;animation:scaleCard .5s;}.card-item > .left{-ms-flex:1;-webkit-box-flex:1;flex:1;padding:30px 30px 75px}.card-item > .right{display:none;position:relative;text-align:center;}@media only screen and (min-width:600px){.card-item > .right{display:block}}.card-content > .title{color:#4b5658}.card-content > .date{color:#7b8b8e;font-size:.875rem}.card-content > .description{color:#576366;font-size:.75em;line-height:1.375rem}.card-identity{max-width:50px;width:100%;}@media only screen and (min-width:600px){.card-identity{max-width:150px}}@media only screen and (min-width:800px){.card-identity{max-width:250px}}.card-identity > .logo{position:absolute;top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:50px;max-height:250px;}@media only screen and (min-width:600px){.card-identity > .logo{width:150px}}@media only screen and (min-width:800px){.card-identity > .logo{width:250px}}@-webkit-keyframes scaleCard{0%{-webkit-transform:scale(0);transform:scale(0)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes scaleCard{0%{-webkit-transform:scale(0);transform:scale(0)}100%{-webkit-transform:scale(1);transform:scale(1)}}.greetings-area{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-align-items:center;-ms-flex-align:center;align-items:center;}@media only screen and (min-width:800px){.greetings-area{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-align-items:center;-ms-flex-align:center;align-items:center}.greetings-area::after{content:'';display:table;clear:both}}@media only screen and (min-width:800px){.greetings-area > .legend{width:70%}}@media only screen and (max-width:400px){.greetings-area > .action{padding-bottom:20px}}@media only screen and (min-width:800px){.greetings-area > .action{width:30%;text-align:center}}.greetings-content > .title{border-bottom:1px solid #000;padding-bottom:.938rem}.c-footer{width:100%;}.c-footer > .social{padding:10px 0;text-align:center}.header-box{border-bottom:1px solid #e6eaea;background-color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-align-items:center;-ms-flex-align:center;align-items:center;-ms-justify-content:space-between;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;height:70px}.header-logo > .title{color:#4b5658;font-size:2.563rem;font-weight:700;letter-spacing:-1px}.header-logo > .title:before{content:'</> EB';}@media only screen and (min-width:600px){.header-logo > .title:before{content:'Erick Bogarin'}}.info-box{font-size:1.125rem;line-height:1.5;padding-top:60px;padding-bottom:50px;text-align:center}.info-box::after{content:'';display:table;clear:both}@media only screen and (min-width:800px){.info-description{float:left;clear:none;text-align:inherit;width:31.33333333333333%;margin-left:0%;margin-right:3%}.info-description::after{content:'';display:table;clear:both}.info-description:last-child{margin-right:0%}}.info-description > .logo{border:5px solid rgba(255,255,255,0.3);border-radius:50%;margin:0 auto;max-width:50%;padding:30px 0;}@media only screen and (min-width:400px){.info-description > .logo{max-width:40%}}@media only screen and (min-width:600px){.info-description > .logo{padding:50px 0}}@media only screen and (min-width:800px){.info-description > .logo{max-width:60%;padding:40px 0}}@media only screen and (min-width:1050px){.info-description > .logo{max-width:50%;padding:50px 0}}@media only screen and (min-width:1050px){.info-description > .description{padding:0 50px}}.info-box .info-description:first-child .logo{background-color:#009bdd}.info-box .info-description:first-child .fa-icon{fill:#f0f8ff}.info-box .info-description:nth-child(2) .logo{background-color:#9d60b8}.info-box .info-description:nth-child(2) .fa-icon{fill:#f0f8ff}.info-box .info-description:last-child .logo{background-color:#4dba7a}.info-box .info-description:last-child .fa-icon{fill:#f0f8ff}.post-area{background-color:#fff;font-size:1.125rem;letter-spacing:.01rem;line-height:2;word-wrap:break-word;}@media only screen{.post-area{font-size:1.25rem}}.header-post{font-weight:900;padding:80px 0}.post-content{color:#333;}.post-content img{display:block;max-width:100%;margin:1.875rem auto}.post-content li{margin-left:1.563rem}.post-content a{color:#0275d8;}.post-content a:hover{color:#0263b8;text-decoration:underline}.post-content .externalLink:after{background-size:100%;background-image:url("../../assets/img/icons/share.svg");content:'';color:#0275d8;display:inline-block;margin-left:.313rem;width:1.375rem;height:1.375rem}.search-dialog{background-color:#fff;box-sizing:border-box;color:#000;position:fixed;top:0;left:0;height:100vh;width:100%;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);-webkit-transition:.3s ease;transition:.3s ease;z-index:3}.search-list{color:#ff5252;}.search-list li{list-style:none}.search-header{-webkit-box-align:start;-ms-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:2.5rem;-ms-justify-content:space-between;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;}.search-header .close{fill:#333;}.search-header .close:hover{fill:#808080}.search-form{-ms-flex-grow:2;-webkit-box-flex:2;-ms-flex-positive:2;flex-grow:2;max-width:75%;}.search-form > .field{border:0;border-bottom:2px solid #000;border-radius:0;background-clip:padding-box;margin-top:1.25rem;padding-bottom:.938rem;}.search-form > .field::-webkit-input-placeholder{letter-spacing:5px}.search-form > .field:-moz-placeholder{letter-spacing:5px}.search-form > .field::-moz-placeholder{letter-spacing:5px}.search-form > .field:-ms-input-placeholder{letter-spacing:5px}.search-form > .field:focus{outline:0}.search-form > .label{font-size:4.063rem;letter-spacing:15px}.search-dialog[data-state="is-visible"]{-webkit-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0)}.site-nav{cursor:auto;position:fixed;top:0;right:0;width:100%;height:100%;-webkit-transform:translate3d(120%,0,0);transform:translate3d(120%,0,0);-webkit-transition:.3s ease;transition:.3s ease;z-index:3;}@media only screen and (min-width:400px) and (max-width:1050px){.site-nav{width:40%}}@media only screen and (min-width:1050px){.site-nav{width:20%}}.site-nav.is-visible{-webkit-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0)}.site-nav > .title{margin-left:10px;}@media only screen and (min-width:400px){.site-nav > .title{text-align:center;margin-left:0}}.site-nav > .close{cursor:pointer;position:fixed;top:15px;right:20px;}@media only screen and (min-width:400px){.site-nav > .close{top:10px;left:-45px}}.centered{position:absolute !important;left:50% !important;-webkit-transform:translateX(-50%) !important;transform:translateX(-50%) !important}.fixed{position:fixed !important;width:100% !important;z-index:5 !important}.bg-dark{background-color:#333}.bg-white{background-color:#fff}.bg-inverse{background-color:#000}.bg-inverse a:hover{background-color:#1a1a1a}.bg-red{background-color:#ff6347}.bg-red a:hover{background-color:#ff8e7a}.bg-light{background-color:#f7f7f2}.bg-light a:hover{background-color:#fff}.clearfix::after{content:'';display:table;clear:both}.pull-right{float:right !important}.pull-left{float:left !important}.mt-0{margin-top:0 !important}.ml-0{margin-left:0 !important}.mr-0{margin-right:0 !important}.mb-0{margin-bottom:0 !important}.mt-1{margin-top:1rem !important}.ml-1{margin-left:1rem !important}.mr-1{margin-right:1rem !important}.mb-1{margin-bottom:1rem !important}.mt-2{margin-top:1.5rem !important}.ml-2{margin-left:1.5rem !important}.mr-2{margin-right:1.5rem !important}.mb-2{margin-bottom:1.5rem !important}.mt-3{margin-top:3rem !important}.ml-3{margin-left:3rem !important}.mr-3{margin-right:3rem !important}.mb-3{margin-bottom:3rem !important}.mt-4{margin-top:3.5rem !important}.ml-4{margin-left:3.5rem !important}.mr-4{margin-right:3.5rem !important}.mb-4{margin-bottom:3.5rem !important}.pt-0{padding-top:0 !important}.pl-0{padding-left:0 !important}.pr-0{padding-right:0 !important}.pb-0{padding-bottom:0 !important}.pt-1{padding-top:1rem !important}.pl-1{padding-left:1rem !important}.pr-1{padding-right:1rem !important}.pb-1{padding-bottom:1rem !important}.pt-2{padding-top:1.5rem !important}.pl-2{padding-left:1.5rem !important}.pr-2{padding-right:1.5rem !important}.pb-2{padding-bottom:1.5rem !important}.pt-3{padding-top:3rem !important}.pl-3{padding-left:3rem !important}.pr-3{padding-right:3rem !important}.pb-3{padding-bottom:3rem !important}.pt-4{padding-top:3.5rem !important}.pl-4{padding-left:3.5rem !important}.pr-4{padding-right:3.5rem !important}.pb-4{padding-bottom:3.5rem !important}.text-justify{text-align:justify !important}.text-nowrap{white-space:nowrap !important}.text-center{text-align:center}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.text-white{color:#fff !important}.text-link{color:#0275d8}[data-state="is-hidden"]{-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);opacity:0;visibility:hidden !important}.is-visible{-ms-filter:none;-webkit-filter:none;filter:none;opacity:1;visibility:visible !important}.inline-flex{display:-ms-inline-flex !important;display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
